MANIFESTO DE TESTES DE INTEGRAÇÃO E UNITÁRIOS
===============================================

1) 1.test.ts 
*** Integration Testing ***
The endpoint must return an html containing the complete microservice documentation.

2) 2.test.js
*** Integration Testing ***
The endpoint must return a JSON with a very specific format in order to match the 
desired feedback. The file must have a Array of Objects with a single key/value pair 
representing the currency code and the currency name.

3) 3.test.ts
*** Integration Testing ***
The endpoint must return a JSON with a very specific 
format in order to match the desired feedback. The file 
must have a Array of Objects with a single key/value pair 
representing the currency code and the converted value.

4) 4.test.ts
*** Integration Testing ***
The endpoint must return a JSON object literal similar to this:
{ "statusCode":204, "message":"Currency CAY not found." }

5) 5.test.ts
*** Integration Testing ***
The endpoint must return a JSON object literal similar to this:
{"statusCode":400,"message":"Validation failed (numeric string is expected)","error":"Bad Request"}

6) 6.test.ts
*** Integration Testing ***
The endpoint must return a JSON object literal similar to this:
{"statusCode":404,"message":"Cannot GET /convert/USD","error":"Not Found"}

7) 7.test.ts
*** Integration Testing ***
The endpoint must return a JSON object literal similar to this:
{"statusCode":404,"message":"Cannot GET /convert/xxx","error":"Not Found"}

8) 8.test.ts
*** Integration Testing ***
The endpoint must return a JSON object literal similar to this:
{"statusCode":404,"message":"Cannot GET /xxx","error":"Not Found"}

9) 9.test.ts
*** Unit Testing ***
Must calculate the conversion rates based on USD.

10) 10.test.ts
*** Unit Testing ***
Must return conversion rates for a given currency and amount.

11) 11.test.

