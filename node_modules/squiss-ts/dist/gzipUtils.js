'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
exports.decompressMessage = exports.compressMessage = exports.GZIP_MARKER = void 0;
// tslint:disable:no-var-requires
const semver_1 = require("semver");
let compress;
let decompress;
/* istanbul ignore next */
if ((0, semver_1.gte)(process.version, '10.16.0')) {
    const { brotliCompress, brotliDecompress } = require('zlib');
    const { promisify } = require('util');
    compress = promisify(brotliCompress);
    decompress = promisify(brotliDecompress);
}
else {
    const iltorb = require('iltorb');
    compress = iltorb.compress;
    decompress = iltorb.decompress;
}
exports.GZIP_MARKER = '__SQS_GZIP__';
const compressMessage = (message) => {
    return compress(Buffer.from(message))
        .then((buffer) => {
        return Promise.resolve(Buffer.from(buffer).toString('base64'));
    });
};
exports.compressMessage = compressMessage;
const decompressMessage = (body) => {
    return decompress(Buffer.from(body, 'base64'))
        .then((bufferUnziped) => {
        return Promise.resolve(bufferUnziped.toString('utf8'));
    });
};
exports.decompressMessage = decompressMessage;
//# sourceMappingURL=gzipUtils.js.map