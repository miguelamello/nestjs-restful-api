'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
exports.deleteBlob = exports.getBlob = exports.uploadBlob = exports.S3_MARKER = void 0;
const uuid_1 = require("uuid");
const messageSizeUtils_1 = require("./messageSizeUtils");
exports.S3_MARKER = '__SQS_S3__';
const uploadBlob = (s3, bucket, blob, prefix) => {
    const key = `${prefix}${(0, uuid_1.v4)()}`;
    const size = (0, messageSizeUtils_1.getSizeInBytes)(blob);
    return s3.putObject({
        Body: blob,
        Bucket: bucket,
        Key: key,
        ContentLength: size,
    }).promise()
        .then(() => {
        return Promise.resolve({
            uploadSize: size,
            bucket,
            key,
        });
    });
};
exports.uploadBlob = uploadBlob;
const getBlob = (s3, uploadData) => {
    const key = uploadData.key;
    const bucket = uploadData.bucket;
    return s3.getObject({
        Key: key,
        Bucket: bucket,
    }).promise()
        .then((s3Result) => {
        return s3Result.Body.toString('utf-8');
    });
};
exports.getBlob = getBlob;
const deleteBlob = (s3, uploadData) => {
    const key = uploadData.key;
    const bucket = uploadData.bucket;
    return s3.deleteObject({
        Key: key,
        Bucket: bucket,
    }).promise()
        .then(() => {
        return Promise.resolve();
    });
};
exports.deleteBlob = deleteBlob;
//# sourceMappingURL=s3Utils.js.map